<?php

class IndexController extends BaseController
{
    /**
     * Action name
     * @var string
     */
    public $name = 'index';

    /**
     * @var ArticleRepository
     */
    protected $articleRepository;

    public function __construct(ArticleRepository $articleRepository)
    {
        $this->articleRepository = $articleRepository;
    }

    protected function render($templateName, $vars = [])
    {
        return parent::render($templateName, $vars); // TODO: Change the autogenerated stub
    }

    public function indexAction(Request $request)
    {
        return new Response(
            $this->render('main', [
                '/' => []
            ])
        );
    }

    public function showAction(Request $request)
    {
        $id = $request->getQueryParameter("id");

        $article = is_numeric($id) ? $this->articleRepository->getById($id) : null;

        if ($article === null) {
            return new Response('Page not found <br><a href="/">back to articles list</a>',
                '404', 'Not found');
        }

        return new Response(
            $this->render('article', [
                'article' => $article
            ])
        );
    }

    public function loginAction(Request $request) {
        return new Response(
            $this->render('auth/login', [
            'title' => 'login page',
            'text' => ''
        ]));
    }

    /**
     * Возращает значение страницы аунтефекации.
    **/
    public function authAction(Request $request)
    {

        $pAccount = sprintf("%s", $_POST['login']);
        $password = sprintf("%s", $_POST['password']);

        setcookie('pAccount', $pAccount);
        setcookie('password', $password);
        return new Response('/', '301', 'homePage');
    }

    public function registrAction(Request $request) {
        return new Response(
            $this->render('auth/registr', [
            'title' => 'registr page',
            'text' => ''
        ]));
    }

    public function addInfoAction(Request $request) {
        return new Response(
            $this->render('changeInfo', [
            'title' => 'changeInfo page',
            'text' => ''
        ]));
    }

    public function addAction(Request $request) {
        if ($request->isPost() && !empty($request->getCountersValueBool()))
        {
            $counterHVSid = $request->getIdCounters("HVS");
            $counterGVSid = $request->getIdCounters("GVS");
            $counterELEid = $request->getIdCounters("ELE");

            $newValueGVS = $request->getValueCounter("GVScounter");
            $newValueHVS = $request->getValueCounter("HVScounter");
            $newValueELE = $request->getValueCounter("ELEcounter");

            $prevValueGVS = $request->getPrevValueCounter($counterGVSid);
            $prevValueHVS = $request->getPrevValueCounter($counterHVSid);
            $prevValueELE = $request->getPrevValueCounter($counterELEid);

            $request->addInfo($counterHVSid, $newValueHVS, $prevValueHVS);
            $request->addInfo($counterGVSid, $newValueGVS, $prevValueGVS);
            $request->addInfo($counterELEid, $newValueELE, $prevValueELE);
        }
        return new Response('/', '301', 'homePage');
    }
}