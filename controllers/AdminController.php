<?php

class AdminController extends BaseController
{
    /**
     * Action name
     * @var string
     */
    public $name = 'index';

    /**
     * @var ArticleRepository
     */
    protected $adminProfile;

    public function __construct(AdminRootProfile $adminRootProfile)
    {
        $this->adminProfile = $adminRootProfile;
    }

    protected function render($templateName, $vars = [])
    {
        return parent::render($templateName, $vars); // TODO: Change the autogenerated stub
    }

    protected function isNulled($vars = [])
    {
        return parent::isNulled($vars); // TODO:
    }

    public function admAction(Request $request)
    {
        if ($this->adminProfile->adminAuth($_COOKIE["pAccount"]))
        {
            return new Response(
                $this->render('admin/main',[
                    'title' => 'Панель администратора',
                    'msg' => "Вы вошли в панель админинстратора"
                ])
            );
        }
        return new Response(
            $this->render('main', [
                'title' => 'Основная страница',
                'text' => '',
                'error' => 'Нет доступа к разделу'
            ]));
    }

    /**
     * форма создания аккаунта
     * @param Request $request
     * @return Response
     */
    public function createUserFormAction(Request $request)
    {
        if ($this->adminProfile->adminAuth($_COOKIE["pAccount"]))
        {
            return new Response(
                $this->render('admin/form/createUserForm', [
                    'title' => 'Создание Пользователя',
                    'formName' => 'Создание нового пользователя'
                ]));
        }
        return new Response(
            $this->render('main', [
                'title' => 'Основная страница',
                'text' => '',
                'error' => 'Нет доступа к разделу'
            ]));
    }

    /***
     * одного пользователя по гет запросу
     * @param Request $request
     * @return void
     */
    public function showOneUserAction(Request $request)
    {
        if ($this->adminProfile->adminAuth($_COOKIE["pAccount"]))
        {
            $id = $request->getQueryParameter("id");
            $user = is_numeric($id) ? $this->adminProfile->getByIdUser($id) : null;
            if (!$user) {
                return new Response('Page not found <br><a href="/admin">back to articles list</a>',
                    '404', 'Not found');
            }

            return new Response(
                $this->render('admin/userAdminProfile', [
                    'user' => $user
                ])
            );
        }
        return new Response(
            $this->render('main', [
                'title' => 'Основная страница',
                'text' => '',
                'error' => 'Нет доступа к разделу'
            ]));
    }

    /***
     * таблица бзеров
     * @param Request $request
     * @return Response
     */
    public function showUsersAction(Request $request)
    {
        if ($this->adminProfile->adminAuth($_COOKIE["pAccount"]))
        {
            $users = $this->adminProfile->getAll();
            return new Response(
                $this->render('admin/usersTable', [
                    'title' => "Список Л/С",
                    'users' => $users,
                    'error' => ''
                ])
            );
        }
        return new Response(
            $this->render('main', [
                'title' => 'Основная страница',
                'text' => '',
                'error' => 'Нет доступа к разделу'
            ]));
    }

    /***
     * создание пользователя
     * @param Request $request
     * @return Response
     */
    public function newUserAction(Request $request)
    {
        if ($this->adminProfile->adminAuth($_COOKIE["pAccount"]))
        {
            if ($request->isPost() && !empty($request->getQueryParameterUser('newUsers')))
            {
                $rqs = $request->getQueryParameterUser('newUsers');
                if($this->isNulled($rqs))
                {
                    if($this->adminProfile->createUser($rqs['name'], $rqs['surname'], $rqs['password'], $rqs['homeSq'], $rqs['roots']) == 0)
                    {
                        $uid = $this->adminProfile->takeIDuser($rqs['name'], $rqs['surname']);
                        $longStr =  "<div style='padding: 100px; margin: 200px auto; text-align: center;'>" . "Запомните номер аккаунт пользователя, через 30 секунд вы будете перенесены на основную страницу." . "<p style='font-size: 20px; text-align: center;'>". "ID : " . $uid[0]['uid'] . "</p>" . "</div>";

                        return new Response(
                            $this->render('template', [
                                'title' => 'Аккаунт успешно создан',
                                'text' => '',
                                'error' => '',
                                'msg' => $longStr,
                                'pathAdmin' => '/admin'
                            ]));
                    }
                    return new Response('/admin', '301', 'adminHome');
                }
                return new Response('/admin', '301', 'adminHome');
            }
            return new Response('/admin', '301', 'adminHome');
        }
        return new Response(
            $this->render('main', [
                'title' => 'Основная страница',
                'text' => '',
                'error' => 'Нет доступа к разделу'
            ]));
    }
}

//
//if ($this->adminProfile->adminAuth($_COOKIE["pAccount"]))
//{
//    BODY :::::
//}
//return new Response(
//    $this->render('main', [
//        'title' => 'Основная страница',
//        'text' => '',
//        'error' => 'Нет доступа к разделу'
//    ]));

